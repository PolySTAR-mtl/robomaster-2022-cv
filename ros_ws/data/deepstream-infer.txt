[property]
gpu-id=0
net-scale-factor=0.0039215697906911373
model-color-format=0


#int8-calib-file=calib.table

batch-size=1
network-mode=0
num-detected-classes=80
interval=0
gie-unique-id=1
process-mode=1
network-type=0
cluster-mode=2
maintain-aspect-ratio=0
parse-bbox-func-name=NvDsInferParseYolo

custom-lib-path=/home/polystar/robomaster-2022-cv/detection/DeepStream-Yolo/nvdsinfer_custom_impl_Yolo/libnvdsinfer_custom_impl_Yolo.so

engine-create-func-name=NvDsInferYoloCudaEngineGet

# 0=RGB, 1=BGR, 2=GRAYSCALE
model-color-format=0

# YOLO cfg, insert the name of the .cfg
custom-network-config=/home/polystar/robomaster-2022-cv/detection/data/yolov3_custom.cfg

# YOLO weights, same but for .weights
model-file=/home/polystar/robomaster-2022-cv/detection/data/yolov3_custom_best.weights

# Generated TensorRT model (will be created if it doesn't exist)
# This is the new optimized network DeepStream will create/use
# *b1* corresponds to batch size (since we are in inference mode, leave to 1)
# *gpu0* which gpu to use, we only have one on Jetson so leave as it is
# *fp16* what precision to use for the variable. It has to be consistent with *network-mode* below
# FP16 means precision is reduced to Float 16 bits instead of Float 32 bits. 
# It will slightly lower accuracy but drastically improve performance!
model-engine-file=/home/polystar/robomaster-2022-cv/detection/model_b1_gpu0_fp16.engine

# Model labels file (dji.names of darknet), either update *labels.txt* or put *dji.names* in the repository and modify this line
labelfile-path=/home/polystar/robomaster-2022-cv/detection/data/dji.names

# Batch size
batch-size=1

# 0=FP32, 1=INT8, 2=FP16 mode
# The precision we talked earlier
network-mode=2

# Number of classes in label file
num-detected-classes=6

[class-attrs-all]
nms-iou-threshold=0.6
pre-cluster-threshold=0.25

# You can modify IOU and Confidence threshold here
# But we can leave default
# IOU threshold
nms-iou-threshold=0.6
# Socre threshold
pre-cluster-threshold=0.25
